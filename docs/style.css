
:root {
	--bgc: #f2f0ea;
	--fgc: #232f2e;
	--hlc: #f03a43;
	--htc: #232f2e70;

	--width:     64ch;
	--nav-width: 10ch;

	--border: 0.25ch;
}

.dark {
	--bgc: #232f2e;
	--fgc: #d9d4d1;
	--hlc: #f9d071;
	--htc: #d9d4d170;
}

.black {
	--bgc: #f2f0ea;
	--fgc: #232f2e;
	--hlc: #000000;
}

.red {
	--bgc: #b92d2d;
	--fgc: #dbd7cd;
	--hlc: #f9d071;
}

.yellow {
	--bgc: #e8c25f;
	--fgc: #232f2e;
	--hlc: #c23e44;
}

.green {
	--bgc: #5e7154;
	--fgc: #e8e4e1;
	--hlc: #f9d071;
	--htc: #e8e4e170;
}

body {
	max-width: var(--width);
	margin: auto;
	padding: 0 2ch;

	background-color: var(--bgc);

	color: var(--fgc);
	font-family: sans-serif;
	line-height: 1.5;
}

header h1 {
	font-size: 1.5em;
	display: flex;
}

header h1::before {
	content: '';
	width: 1.5em;
	margin-right: 0.5ch;
	background-color: var(--hlc);
	-webkit-mask: url(gfx/photodiode.svg) no-repeat center / contain;
}

main {
	margin-bottom: 4rem;
}

footer {
	padding-bottom: 1rem;
}

#links {
	display: flex;
	justify-content: center;
}

#links a {
	width: 1.5rem;
	height: 1.5rem;
	margin: 0 1ch;
	display: block;
	overflow: hidden;
	background-color: var(--fgc);
	text-indent: -999ch;
}

#links a:hover {
	background-color: var(--hlc);
}

#links .github  {-webkit-mask: url(gfx/github.svg)  no-repeat center / contain;}
#links .twitter {-webkit-mask: url(gfx/twitter.svg) no-repeat center / contain;}
#links .firefox {-webkit-mask: url(gfx/firefox.svg) no-repeat center / contain;}


a {
	color: var(--hlc);
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}

/* list */
ol {
	padding: 0;
	list-style: none;
}

li {
	margin-bottom: 0.5em;
	display: flex;
	justify-content: space-between;
}

ol a {
	width: 100%;
	font-weight: bold;
}

/* article */
article h1 {
	margin-bottom: 0.5rem;
}

time {
	color: var(--htc);
}

article > header {
	display: flex;
	justify-content: space-between;
}

blockquote {
	margin-left: 0;
	padding: 0 2ch;
	border-left: var(--border) solid var(--htc);
}

/* code */
pre {
	counter-reset: line;
	overflow-x: auto;
	scrollbar-color: var(--htc) var(--bgc);
	scrollbar-width: thin;
}

pre line::before {
	content: counter(line);
	counter-increment: line;
	width: 2ch;
	padding-right: 2ch;
	display: inline-block;
	color: var(--htc);
	text-align: right;
}

pre code {
	font-size: inherit;
}

pre .symbol {
	font-weight: bold;
}

pre .number, pre .string {
	color: var(--hlc);
	font-weight: bold;
}

pre .comment {
	color: var(--htc);
}
